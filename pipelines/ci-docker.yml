trigger:
  branches:
    include:
      - main

variables:
  spoke2Subscription: "Azure Sub-B"
  subscriptionId: 'ed5e066d-0ce1-4bfa-b62d-edba1e6eb807'
  resourceGroup: 'rg-az400-container'
  location: "northeurope"
  keyVaultName: "sharedServicesKV-Mohsen"
  wifServiceConnection: "WIF-HubSpokes-Root"

stages:

- stage: Build
  displayName: 'Docker Image'
  jobs:
    - job: Build
      pool:
        name: 'IaC-agent-pool'
      steps:

    # Deploy ACR using Bicep
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploy ACR using Bicep
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: $(azureServiceConnection)
        subscriptionId: $(subscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroup)'
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: 'infra/acr.bicep'
        deploymentMode: 'Incremental'
        deploymentOutputs: 'outputJson'

    # Parse Bicep output safely
    - task: PowerShell@2
      displayName: Parse Bicep Output
      inputs:
        targetType: 'inline'
        script: |
          if ('$(outputJson)' -ne '') {
              $var = ConvertFrom-Json '$(outputJson)'
              $value = $var.acrLoginServer.value
              Write-Host "##vso[task.setvariable variable=acrLoginServer;]$value"
          } else {
              Write-Error "outputJson is empty, cannot parse ACR login server."
          }

    # Build Docker image
    - task: Docker@0
      displayName: 'Build the docker image'
      inputs:
        azureSubscription: $(azureServiceConnection)
        azureContainerRegistry: $(acrLoginServer)
        dockerFile: 'src/Web/Dockerfile'
        defaultContext: false
        context: $(Build.SourcesDirectory)
        includeLatestTag: true
        imageName: eshoponweb/web:$(Build.BuildId)

    # Push Docker image
    - task: Docker@0
      displayName: 'Push the docker images'
      inputs:
        azureSubscription: $(azureServiceConnection)
        azureContainerRegistry: $(acrLoginServer)
        action: 'Push an image'
        imageName: eshoponweb/web:$(Build.BuildId)
        includeLatestTag: true
